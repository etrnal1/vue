{"ast":null,"code":"import _toConsumableArray from \"/Users/mac/vue/ffmpeg/frontend/ant-design-vue-pro/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/mac/vue/ffmpeg/frontend/ant-design-vue-pro/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport RepositoryForm from './RepositoryForm';\nimport TaskForm from './TaskForm';\nimport FooterToolBar from '@/components/FooterToolbar';\nimport { baseMixin } from '@/store/app-mixin';\nvar fieldLabels = {\n  name: '仓库名',\n  url: '仓库域名',\n  owner: '仓库管理员',\n  approver: '审批人',\n  dateRange: '生效日期',\n  type: '仓库类型',\n  name2: '任务名',\n  url2: '任务描述',\n  owner2: '执行人',\n  approver2: '责任人',\n  dateRange2: '生效日期',\n  type2: '任务类型'\n};\nexport default {\n  name: 'AdvancedForm',\n  mixins: [baseMixin],\n  components: {\n    FooterToolBar: FooterToolBar,\n    RepositoryForm: RepositoryForm,\n    TaskForm: TaskForm\n  },\n  data: function data() {\n    return {\n      loading: false,\n      memberLoading: false,\n      // table\n      columns: [{\n        title: '成员姓名',\n        dataIndex: 'name',\n        key: 'name',\n        width: '20%',\n        scopedSlots: {\n          customRender: 'name'\n        }\n      }, {\n        title: '工号',\n        dataIndex: 'workId',\n        key: 'workId',\n        width: '20%',\n        scopedSlots: {\n          customRender: 'workId'\n        }\n      }, {\n        title: '所属部门',\n        dataIndex: 'department',\n        key: 'department',\n        width: '40%',\n        scopedSlots: {\n          customRender: 'department'\n        }\n      }, {\n        title: '操作',\n        key: 'action',\n        scopedSlots: {\n          customRender: 'operation'\n        }\n      }],\n      data: [{\n        key: '1',\n        name: '小明',\n        workId: '001',\n        editable: false,\n        department: '行政部'\n      }, {\n        key: '2',\n        name: '李莉',\n        workId: '002',\n        editable: false,\n        department: 'IT部'\n      }, {\n        key: '3',\n        name: '王小帅',\n        workId: '003',\n        editable: false,\n        department: '财务部'\n      }],\n      errors: []\n    };\n  },\n  methods: {\n    handleSubmit: function handleSubmit(e) {\n      e.preventDefault();\n    },\n    newMember: function newMember() {\n      var length = this.data.length;\n      this.data.push({\n        key: length === 0 ? '1' : (parseInt(this.data[length - 1].key) + 1).toString(),\n        name: '',\n        workId: '',\n        department: '',\n        editable: true,\n        isNew: true\n      });\n    },\n    remove: function remove(key) {\n      var newData = this.data.filter(function (item) {\n        return item.key !== key;\n      });\n      this.data = newData;\n    },\n    saveRow: function saveRow(record) {\n      var _this = this;\n      this.memberLoading = true;\n      var key = record.key,\n        name = record.name,\n        workId = record.workId,\n        department = record.department;\n      if (!name || !workId || !department) {\n        this.memberLoading = false;\n        this.$message.error('请填写完整成员信息。');\n        return;\n      }\n      // 模拟网络请求、卡顿 800ms\n      new Promise(function (resolve) {\n        setTimeout(function () {\n          resolve({\n            loop: false\n          });\n        }, 800);\n      }).then(function () {\n        var target = _this.data.find(function (item) {\n          return item.key === key;\n        });\n        target.editable = false;\n        target.isNew = false;\n        _this.memberLoading = false;\n      });\n    },\n    toggle: function toggle(key) {\n      var target = this.data.find(function (item) {\n        return item.key === key;\n      });\n      target._originalData = _objectSpread({}, target);\n      target.editable = !target.editable;\n    },\n    getRowByKey: function getRowByKey(key, newData) {\n      var data = this.data;\n      return (newData || data).find(function (item) {\n        return item.key === key;\n      });\n    },\n    cancel: function cancel(key) {\n      var target = this.data.find(function (item) {\n        return item.key === key;\n      });\n      Object.keys(target).forEach(function (key) {\n        target[key] = target._originalData[key];\n      });\n      target._originalData = undefined;\n    },\n    handleChange: function handleChange(value, key, column) {\n      var newData = _toConsumableArray(this.data);\n      var target = newData.find(function (item) {\n        return key === item.key;\n      });\n      if (target) {\n        target[column] = value;\n        this.data = newData;\n      }\n    },\n    // 最终全页面提交\n    validate: function validate() {\n      var _this2 = this;\n      var _this$$refs = this.$refs,\n        repository = _this$$refs.repository,\n        task = _this$$refs.task,\n        $notification = this.$notification;\n      var repositoryForm = new Promise(function (resolve, reject) {\n        repository.form.validateFields(function (err, values) {\n          if (err) {\n            reject(err);\n            return;\n          }\n          resolve(values);\n        });\n      });\n      var taskForm = new Promise(function (resolve, reject) {\n        task.form.validateFields(function (err, values) {\n          if (err) {\n            reject(err);\n            return;\n          }\n          resolve(values);\n        });\n      });\n\n      // clean this.errors\n      this.errors = [];\n      Promise.all([repositoryForm, taskForm]).then(function (values) {\n        $notification['error']({\n          message: 'Received values of form:',\n          description: JSON.stringify(values)\n        });\n      }).catch(function () {\n        var errors = Object.assign({}, repository.form.getFieldsError(), task.form.getFieldsError());\n        var tmp = _objectSpread({}, errors);\n        _this2.errorList(tmp);\n      });\n    },\n    errorList: function errorList(errors) {\n      if (!errors || errors.length === 0) {\n        return;\n      }\n      this.errors = Object.keys(errors).filter(function (key) {\n        return errors[key];\n      }).map(function (key) {\n        return {\n          key: key,\n          message: errors[key][0],\n          fieldLabel: fieldLabels[key]\n        };\n      });\n    },\n    scrollToField: function scrollToField(fieldKey) {\n      var labelNode = document.querySelector(\"label[for=\\\"\".concat(fieldKey, \"\\\"]\"));\n      if (labelNode) {\n        labelNode.scrollIntoView(true);\n      }\n    }\n  }\n};","map":{"version":3,"names":["RepositoryForm","TaskForm","FooterToolBar","baseMixin","fieldLabels","name","url","owner","approver","dateRange","type","name2","url2","owner2","approver2","dateRange2","type2","mixins","components","data","loading","memberLoading","columns","title","dataIndex","key","width","scopedSlots","customRender","workId","editable","department","errors","methods","handleSubmit","e","preventDefault","newMember","length","push","parseInt","toString","isNew","remove","newData","filter","item","saveRow","record","_this","$message","error","Promise","resolve","setTimeout","loop","then","target","find","toggle","_originalData","_objectSpread","getRowByKey","cancel","Object","keys","forEach","undefined","handleChange","value","column","_toConsumableArray","validate","_this2","_this$$refs","$refs","repository","task","$notification","repositoryForm","reject","form","validateFields","err","values","taskForm","all","message","description","JSON","stringify","catch","assign","getFieldsError","tmp","errorList","map","fieldLabel","scrollToField","fieldKey","labelNode","document","querySelector","concat","scrollIntoView"],"sources":["src/views/form/advancedForm/AdvancedForm.vue"],"sourcesContent":["<template>\n  <page-header-wrapper content=\"高级表单常见于一次性输入和提交大批量数据的场景\">\n    <a-card class=\"card\" title=\"仓库管理\" :bordered=\"false\">\n      <repository-form ref=\"repository\" :showSubmit=\"false\" />\n    </a-card>\n    <a-card class=\"card\" title=\"任务管理\" :bordered=\"false\">\n      <task-form ref=\"task\" :showSubmit=\"false\" />\n    </a-card>\n\n    <!-- table -->\n    <a-card>\n      <a-table\n        :columns=\"columns\"\n        :dataSource=\"data\"\n        :pagination=\"false\"\n        :loading=\"memberLoading\"\n      >\n        <template v-for=\"(col, i) in ['name', 'workId', 'department']\" :slot=\"col\" slot-scope=\"text, record\">\n          <a-input\n            :key=\"col\"\n            v-if=\"record.editable\"\n            style=\"margin: -5px 0\"\n            :value=\"text\"\n            :placeholder=\"columns[i].title\"\n            @change=\"e => handleChange(e.target.value, record.key, col)\"\n          />\n          <template v-else>{{ text }}</template>\n        </template>\n        <template slot=\"operation\" slot-scope=\"text, record\">\n          <template v-if=\"record.editable\">\n            <span v-if=\"record.isNew\">\n              <a @click=\"saveRow(record)\">添加</a>\n              <a-divider type=\"vertical\" />\n              <a-popconfirm title=\"是否要删除此行？\" @confirm=\"remove(record.key)\">\n                <a>删除</a>\n              </a-popconfirm>\n            </span>\n            <span v-else>\n              <a @click=\"saveRow(record)\">保存</a>\n              <a-divider type=\"vertical\" />\n              <a @click=\"cancel(record.key)\">取消</a>\n            </span>\n          </template>\n          <span v-else>\n            <a @click=\"toggle(record.key)\">编辑</a>\n            <a-divider type=\"vertical\" />\n            <a-popconfirm title=\"是否要删除此行？\" @confirm=\"remove(record.key)\">\n              <a>删除</a>\n            </a-popconfirm>\n          </span>\n        </template>\n      </a-table>\n      <a-button style=\"width: 100%; margin-top: 16px; margin-bottom: 8px\" type=\"dashed\" icon=\"plus\" @click=\"newMember\">新增成员</a-button>\n    </a-card>\n\n    <!-- fixed footer toolbar -->\n    <footer-tool-bar :is-mobile=\"isMobile\" :collapsed=\"sideCollapsed\">\n      <span class=\"popover-wrapper\">\n        <a-popover title=\"表单校验信息\" overlayClassName=\"antd-pro-pages-forms-style-errorPopover\" trigger=\"click\" :getPopupContainer=\"trigger => trigger.parentNode\">\n          <template slot=\"content\">\n            <li v-for=\"item in errors\" :key=\"item.key\" @click=\"scrollToField(item.key)\" class=\"antd-pro-pages-forms-style-errorListItem\">\n              <a-icon type=\"cross-circle-o\" class=\"antd-pro-pages-forms-style-errorIcon\" />\n              <div class=\"\">{{ item.message }}</div>\n              <div class=\"antd-pro-pages-forms-style-errorField\">{{ item.fieldLabel }}</div>\n            </li>\n          </template>\n          <span class=\"antd-pro-pages-forms-style-errorIcon\" v-if=\"errors.length > 0\">\n            <a-icon type=\"exclamation-circle\" />{{ errors.length }}\n          </span>\n        </a-popover>\n      </span>\n      <a-button type=\"primary\" @click=\"validate\" :loading=\"loading\">提交</a-button>\n    </footer-tool-bar>\n  </page-header-wrapper>\n</template>\n\n<script>\nimport RepositoryForm from './RepositoryForm'\nimport TaskForm from './TaskForm'\nimport FooterToolBar from '@/components/FooterToolbar'\nimport { baseMixin } from '@/store/app-mixin'\n\nconst fieldLabels = {\n  name: '仓库名',\n  url: '仓库域名',\n  owner: '仓库管理员',\n  approver: '审批人',\n  dateRange: '生效日期',\n  type: '仓库类型',\n  name2: '任务名',\n  url2: '任务描述',\n  owner2: '执行人',\n  approver2: '责任人',\n  dateRange2: '生效日期',\n  type2: '任务类型'\n}\n\nexport default {\n  name: 'AdvancedForm',\n  mixins: [baseMixin],\n  components: {\n    FooterToolBar,\n    RepositoryForm,\n    TaskForm\n  },\n  data () {\n    return {\n      loading: false,\n      memberLoading: false,\n\n      // table\n      columns: [\n        {\n          title: '成员姓名',\n          dataIndex: 'name',\n          key: 'name',\n          width: '20%',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '工号',\n          dataIndex: 'workId',\n          key: 'workId',\n          width: '20%',\n          scopedSlots: { customRender: 'workId' }\n        },\n        {\n          title: '所属部门',\n          dataIndex: 'department',\n          key: 'department',\n          width: '40%',\n          scopedSlots: { customRender: 'department' }\n        },\n        {\n          title: '操作',\n          key: 'action',\n          scopedSlots: { customRender: 'operation' }\n        }\n      ],\n      data: [\n        {\n          key: '1',\n          name: '小明',\n          workId: '001',\n          editable: false,\n          department: '行政部'\n        },\n        {\n          key: '2',\n          name: '李莉',\n          workId: '002',\n          editable: false,\n          department: 'IT部'\n        },\n        {\n          key: '3',\n          name: '王小帅',\n          workId: '003',\n          editable: false,\n          department: '财务部'\n        }\n      ],\n\n      errors: []\n    }\n  },\n  methods: {\n    handleSubmit (e) {\n      e.preventDefault()\n    },\n    newMember () {\n      const length = this.data.length\n      this.data.push({\n        key: length === 0 ? '1' : (parseInt(this.data[length - 1].key) + 1).toString(),\n        name: '',\n        workId: '',\n        department: '',\n        editable: true,\n        isNew: true\n      })\n    },\n    remove (key) {\n      const newData = this.data.filter(item => item.key !== key)\n      this.data = newData\n    },\n    saveRow (record) {\n      this.memberLoading = true\n      const { key, name, workId, department } = record\n      if (!name || !workId || !department) {\n        this.memberLoading = false\n        this.$message.error('请填写完整成员信息。')\n        return\n      }\n      // 模拟网络请求、卡顿 800ms\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve({ loop: false })\n        }, 800)\n      }).then(() => {\n        const target = this.data.find(item => item.key === key)\n        target.editable = false\n        target.isNew = false\n        this.memberLoading = false\n      })\n    },\n    toggle (key) {\n      const target = this.data.find(item => item.key === key)\n      target._originalData = { ...target }\n      target.editable = !target.editable\n    },\n    getRowByKey (key, newData) {\n      const data = this.data\n      return (newData || data).find(item => item.key === key)\n    },\n    cancel (key) {\n      const target = this.data.find(item => item.key === key)\n      Object.keys(target).forEach(key => { target[key] = target._originalData[key] })\n      target._originalData = undefined\n    },\n    handleChange (value, key, column) {\n      const newData = [...this.data]\n      const target = newData.find(item => key === item.key)\n      if (target) {\n        target[column] = value\n        this.data = newData\n      }\n    },\n\n    // 最终全页面提交\n    validate () {\n      const { $refs: { repository, task }, $notification } = this\n      const repositoryForm = new Promise((resolve, reject) => {\n        repository.form.validateFields((err, values) => {\n          if (err) {\n            reject(err)\n            return\n          }\n          resolve(values)\n        })\n      })\n      const taskForm = new Promise((resolve, reject) => {\n        task.form.validateFields((err, values) => {\n          if (err) {\n            reject(err)\n            return\n          }\n          resolve(values)\n        })\n      })\n\n      // clean this.errors\n      this.errors = []\n      Promise.all([repositoryForm, taskForm]).then(values => {\n        $notification['error']({\n          message: 'Received values of form:',\n          description: JSON.stringify(values)\n        })\n      }).catch(() => {\n        const errors = Object.assign({}, repository.form.getFieldsError(), task.form.getFieldsError())\n        const tmp = { ...errors }\n        this.errorList(tmp)\n      })\n    },\n    errorList (errors) {\n      if (!errors || errors.length === 0) {\n        return\n      }\n      this.errors = Object.keys(errors)\n        .filter(key => errors[key])\n        .map(key => ({\n          key: key,\n          message: errors[key][0],\n          fieldLabel: fieldLabels[key]\n        }))\n    },\n    scrollToField (fieldKey) {\n      const labelNode = document.querySelector(`label[for=\"${fieldKey}\"]`)\n      if (labelNode) {\n        labelNode.scrollIntoView(true)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  .card{\n    margin-bottom: 24px;\n  }\n  .popover-wrapper {\n    :deep(.antd-pro-pages-forms-style-errorPopover .ant-popover-inner-content) {\n      min-width: 256px;\n      max-height: 290px;\n      padding: 0;\n      overflow: auto;\n    }\n  }\n  .antd-pro-pages-forms-style-errorIcon {\n    user-select: none;\n    margin-right: 24px;\n    color: #f5222d;\n    cursor: pointer;\n    i {\n          margin-right: 4px;\n    }\n  }\n  .antd-pro-pages-forms-style-errorListItem {\n    padding: 8px 16px;\n    list-style: none;\n    border-bottom: 1px solid #e8e8e8;\n    cursor: pointer;\n    transition: all .3s;\n\n    &:hover {\n      background: #e6f7ff;\n    }\n    .antd-pro-pages-forms-style-errorIcon {\n      float: left;\n      margin-top: 4px;\n      margin-right: 12px;\n      padding-bottom: 22px;\n      color: #f5222d;\n    }\n    .antd-pro-pages-forms-style-errorField {\n      margin-top: 2px;\n      color: rgba(0,0,0,.45);\n      font-size: 12px;\n    }\n  }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}