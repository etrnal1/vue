{"ast":null,"code":"import _objectSpread from \"/Users/mac/vue/ffmpeg/frontend/ant-design-vue-pro/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport events from './events';\nexport default {\n  name: 'MultiTab',\n  data: function data() {\n    return {\n      fullPathList: [],\n      pages: [],\n      activeKey: '',\n      newTabIndex: 0\n    };\n  },\n  created: function created() {\n    var _this = this;\n    // bind event\n    events.$on('open', function (val) {\n      if (!val) {\n        throw new Error(\"multi-tab: open tab \".concat(val, \" err\"));\n      }\n      _this.activeKey = val;\n    }).$on('close', function (val) {\n      if (!val) {\n        _this.closeThat(_this.activeKey);\n        return;\n      }\n      _this.closeThat(val);\n    }).$on('rename', function (_ref) {\n      var key = _ref.key,\n        name = _ref.name;\n      console.log('rename', key, name);\n      try {\n        var item = _this.pages.find(function (item) {\n          return item.path === key;\n        });\n        item.meta.customTitle = name;\n        _this.$forceUpdate();\n      } catch (e) {}\n    });\n    this.pages.push(this.$route);\n    this.fullPathList.push(this.$route.fullPath);\n    this.selectedLastPath();\n  },\n  methods: {\n    onEdit: function onEdit(targetKey, action) {\n      this[action](targetKey);\n    },\n    remove: function remove(targetKey) {\n      this.pages = this.pages.filter(function (page) {\n        return page.fullPath !== targetKey;\n      });\n      this.fullPathList = this.fullPathList.filter(function (path) {\n        return path !== targetKey;\n      });\n      // 判断当前标签是否关闭，若关闭则跳转到最后一个还存在的标签页\n      if (!this.fullPathList.includes(this.activeKey)) {\n        this.selectedLastPath();\n      }\n    },\n    selectedLastPath: function selectedLastPath() {\n      this.activeKey = this.fullPathList[this.fullPathList.length - 1];\n    },\n    // content menu\n    closeThat: function closeThat(e) {\n      // 判断是否为最后一个标签页，如果是最后一个，则无法被关闭\n      if (this.fullPathList.length > 1) {\n        this.remove(e);\n      } else {\n        this.$message.info('这是最后一个标签了, 无法被关闭');\n      }\n    },\n    closeLeft: function closeLeft(e) {\n      var _this2 = this;\n      var currentIndex = this.fullPathList.indexOf(e);\n      if (currentIndex > 0) {\n        this.fullPathList.forEach(function (item, index) {\n          if (index < currentIndex) {\n            _this2.remove(item);\n          }\n        });\n      } else {\n        this.$message.info('左侧没有标签');\n      }\n    },\n    closeRight: function closeRight(e) {\n      var _this3 = this;\n      var currentIndex = this.fullPathList.indexOf(e);\n      if (currentIndex < this.fullPathList.length - 1) {\n        this.fullPathList.forEach(function (item, index) {\n          if (index > currentIndex) {\n            _this3.remove(item);\n          }\n        });\n      } else {\n        this.$message.info('右侧没有标签');\n      }\n    },\n    closeAll: function closeAll(e) {\n      var _this4 = this;\n      var currentIndex = this.fullPathList.indexOf(e);\n      this.fullPathList.forEach(function (item, index) {\n        if (index !== currentIndex) {\n          _this4.remove(item);\n        }\n      });\n    },\n    closeMenuClick: function closeMenuClick(key, route) {\n      this[key](route);\n    },\n    renderTabPaneMenu: function renderTabPaneMenu(e) {\n      var _this5 = this;\n      var h = this.$createElement;\n      return h(\"a-menu\", {\n        \"on\": _objectSpread({}, {\n          click: function click(_ref2) {\n            var key = _ref2.key,\n              item = _ref2.item,\n              domEvent = _ref2.domEvent;\n            _this5.closeMenuClick(key, e);\n          }\n        })\n      }, [h(\"a-menu-item\", {\n        \"key\": \"closeThat\"\n      }, [\"\\u5173\\u95ED\\u5F53\\u524D\\u6807\\u7B7E\"]), h(\"a-menu-item\", {\n        \"key\": \"closeRight\"\n      }, [\"\\u5173\\u95ED\\u53F3\\u4FA7\"]), h(\"a-menu-item\", {\n        \"key\": \"closeLeft\"\n      }, [\"\\u5173\\u95ED\\u5DE6\\u4FA7\"]), h(\"a-menu-item\", {\n        \"key\": \"closeAll\"\n      }, [\"\\u5173\\u95ED\\u5168\\u90E8\"])]);\n    },\n    // render\n    renderTabPane: function renderTabPane(title, keyPath) {\n      var h = this.$createElement;\n      var menu = this.renderTabPaneMenu(keyPath);\n      return h(\"a-dropdown\", {\n        \"attrs\": {\n          \"overlay\": menu,\n          \"trigger\": ['contextmenu']\n        }\n      }, [h(\"span\", {\n        \"style\": {\n          userSelect: 'none'\n        }\n      }, [title])]);\n    }\n  },\n  watch: {\n    '$route': function $route(newVal) {\n      this.activeKey = newVal.fullPath;\n      if (this.fullPathList.indexOf(newVal.fullPath) < 0) {\n        this.fullPathList.push(newVal.fullPath);\n        this.pages.push(newVal);\n      }\n    },\n    activeKey: function activeKey(newPathKey) {\n      this.$router.push({\n        path: newPathKey\n      });\n    }\n  },\n  render: function render() {\n    var _this6 = this;\n    var h = arguments[0];\n    var onEdit = this.onEdit,\n      pages = this.$data.pages;\n    var panes = pages.map(function (page) {\n      return h(\"a-tab-pane\", {\n        \"style\": {\n          height: 0\n        },\n        \"attrs\": {\n          \"tab\": _this6.renderTabPane(page.meta.customTitle || page.meta.title, page.fullPath),\n          \"closable\": pages.length > 1\n        },\n        \"key\": page.fullPath\n      });\n    });\n    return h(\"div\", {\n      \"class\": \"ant-pro-multi-tab\"\n    }, [h(\"div\", {\n      \"class\": \"ant-pro-multi-tab-wrapper\"\n    }, [h(\"a-tabs\", {\n      \"attrs\": {\n        \"hideAdd\": true,\n        \"type\": 'editable-card',\n        \"tabBarStyle\": {\n          background: '#FFF',\n          margin: 0,\n          paddingLeft: '16px',\n          paddingTop: '1px'\n        }\n      },\n      \"on\": _objectSpread({}, {\n        edit: onEdit\n      }),\n      \"model\": {\n        value: _this6.activeKey,\n        callback: function callback($$v) {\n          _this6.activeKey = $$v;\n        }\n      }\n    }, [panes])])]);\n  }\n};","map":{"version":3,"names":["events","name","data","fullPathList","pages","activeKey","newTabIndex","created","_this","$on","val","Error","concat","closeThat","_ref","key","console","log","item","find","path","meta","customTitle","$forceUpdate","e","push","$route","fullPath","selectedLastPath","methods","onEdit","targetKey","action","remove","filter","page","includes","length","$message","info","closeLeft","_this2","currentIndex","indexOf","forEach","index","closeRight","_this3","closeAll","_this4","closeMenuClick","route","renderTabPaneMenu","_this5","h","$createElement","_objectSpread","click","_ref2","domEvent","renderTabPane","title","keyPath","menu","userSelect","watch","newVal","newPathKey","$router","render","_this6","arguments","$data","panes","map","height","background","margin","paddingLeft","paddingTop","edit","value","callback","$$v"],"sources":["src/components/MultiTab/MultiTab.vue"],"sourcesContent":["<script>\nimport events from './events'\n\nexport default {\n  name: 'MultiTab',\n  data () {\n    return {\n      fullPathList: [],\n      pages: [],\n      activeKey: '',\n      newTabIndex: 0\n    }\n  },\n  created () {\n    // bind event\n    events.$on('open', val => {\n      if (!val) {\n        throw new Error(`multi-tab: open tab ${val} err`)\n      }\n      this.activeKey = val\n    }).$on('close', val => {\n      if (!val) {\n        this.closeThat(this.activeKey)\n        return\n      }\n      this.closeThat(val)\n    }).$on('rename', ({ key, name }) => {\n      console.log('rename', key, name)\n      try {\n        const item = this.pages.find(item => item.path === key)\n        item.meta.customTitle = name\n        this.$forceUpdate()\n      } catch (e) {\n      }\n    })\n\n    this.pages.push(this.$route)\n    this.fullPathList.push(this.$route.fullPath)\n    this.selectedLastPath()\n  },\n  methods: {\n    onEdit (targetKey, action) {\n      this[action](targetKey)\n    },\n    remove (targetKey) {\n      this.pages = this.pages.filter(page => page.fullPath !== targetKey)\n      this.fullPathList = this.fullPathList.filter(path => path !== targetKey)\n      // 判断当前标签是否关闭，若关闭则跳转到最后一个还存在的标签页\n      if (!this.fullPathList.includes(this.activeKey)) {\n        this.selectedLastPath()\n      }\n    },\n    selectedLastPath () {\n      this.activeKey = this.fullPathList[this.fullPathList.length - 1]\n    },\n\n    // content menu\n    closeThat (e) {\n      // 判断是否为最后一个标签页，如果是最后一个，则无法被关闭\n      if (this.fullPathList.length > 1) {\n        this.remove(e)\n      } else {\n        this.$message.info('这是最后一个标签了, 无法被关闭')\n      }\n    },\n    closeLeft (e) {\n      const currentIndex = this.fullPathList.indexOf(e)\n      if (currentIndex > 0) {\n        this.fullPathList.forEach((item, index) => {\n          if (index < currentIndex) {\n            this.remove(item)\n          }\n        })\n      } else {\n        this.$message.info('左侧没有标签')\n      }\n    },\n    closeRight (e) {\n      const currentIndex = this.fullPathList.indexOf(e)\n      if (currentIndex < (this.fullPathList.length - 1)) {\n        this.fullPathList.forEach((item, index) => {\n          if (index > currentIndex) {\n            this.remove(item)\n          }\n        })\n      } else {\n        this.$message.info('右侧没有标签')\n      }\n    },\n    closeAll (e) {\n      const currentIndex = this.fullPathList.indexOf(e)\n      this.fullPathList.forEach((item, index) => {\n        if (index !== currentIndex) {\n          this.remove(item)\n        }\n      })\n    },\n    closeMenuClick (key, route) {\n      this[key](route)\n    },\n    renderTabPaneMenu (e) {\n      return (\n        <a-menu {...{ on: { click: ({ key, item, domEvent }) => { this.closeMenuClick(key, e) } } }}>\n          <a-menu-item key=\"closeThat\">关闭当前标签</a-menu-item>\n          <a-menu-item key=\"closeRight\">关闭右侧</a-menu-item>\n          <a-menu-item key=\"closeLeft\">关闭左侧</a-menu-item>\n          <a-menu-item key=\"closeAll\">关闭全部</a-menu-item>\n        </a-menu>\n      )\n    },\n    // render\n    renderTabPane (title, keyPath) {\n      const menu = this.renderTabPaneMenu(keyPath)\n\n      return (\n        <a-dropdown overlay={menu} trigger={['contextmenu']}>\n          <span style={{ userSelect: 'none' }}>{ title }</span>\n        </a-dropdown>\n      )\n    }\n  },\n  watch: {\n    '$route': function (newVal) {\n      this.activeKey = newVal.fullPath\n      if (this.fullPathList.indexOf(newVal.fullPath) < 0) {\n        this.fullPathList.push(newVal.fullPath)\n        this.pages.push(newVal)\n      }\n    },\n    activeKey: function (newPathKey) {\n      this.$router.push({ path: newPathKey })\n    }\n  },\n  render () {\n    const { onEdit, $data: { pages } } = this\n    const panes = pages.map(page => {\n      return (\n        <a-tab-pane\n          style={{ height: 0 }}\n          tab={this.renderTabPane(page.meta.customTitle || page.meta.title, page.fullPath)}\n          key={page.fullPath} closable={pages.length > 1}\n        >\n        </a-tab-pane>)\n    })\n\n    return (\n      <div class=\"ant-pro-multi-tab\">\n        <div class=\"ant-pro-multi-tab-wrapper\">\n          <a-tabs\n            hideAdd\n            type={'editable-card'}\n            v-model={this.activeKey}\n            tabBarStyle={{ background: '#FFF', margin: 0, paddingLeft: '16px', paddingTop: '1px' }}\n            {...{ on: { edit: onEdit } }}>\n            {panes}\n          </a-tabs>\n        </div>\n      </div>\n    )\n  }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}