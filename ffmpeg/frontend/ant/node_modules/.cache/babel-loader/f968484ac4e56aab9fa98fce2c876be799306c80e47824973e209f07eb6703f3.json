{"ast":null,"code":"import moment from 'moment';\nimport { TagSelect, StandardFormRow, Ellipsis, AvatarList } from '@/components';\nvar TagSelectOption = TagSelect.Option;\nvar AvatarListItem = AvatarList.Item;\nexport default {\n  name: 'Project',\n  components: {\n    AvatarList: AvatarList,\n    AvatarListItem: AvatarListItem,\n    Ellipsis: Ellipsis,\n    TagSelect: TagSelect,\n    TagSelectOption: TagSelectOption,\n    StandardFormRow: StandardFormRow\n  },\n  data: function data() {\n    return {\n      data: [],\n      form: this.$form.createForm(this),\n      loading: true\n    };\n  },\n  filters: {\n    fromNow: function fromNow(date) {\n      return moment(date).fromNow();\n    }\n  },\n  mounted: function mounted() {\n    this.getList();\n  },\n  methods: {\n    handleChange: function handleChange(value) {\n      console.log(\"selected \".concat(value));\n    },\n    getList: function getList() {\n      var _this = this;\n      this.$http.get('/list/article', {\n        params: {\n          count: 8\n        }\n      }).then(function (res) {\n        console.log('res', res);\n        _this.data = res.result;\n        _this.loading = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["moment","TagSelect","StandardFormRow","Ellipsis","AvatarList","TagSelectOption","Option","AvatarListItem","Item","name","components","data","form","$form","createForm","loading","filters","fromNow","date","mounted","getList","methods","handleChange","value","console","log","concat","_this","$http","get","params","count","then","res","result"],"sources":["src/views/account/center/page/Project.vue"],"sourcesContent":["<template>\n  <div class=\"ant-pro-pages-account-projects-cardList\">\n    <a-list :loading=\"loading\" :data-source=\"data\" :grid=\"{ gutter: 24, xxl: 3, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }\">\n      <a-list-item slot=\"renderItem\" slot-scope=\"item\">\n        <a-card class=\"ant-pro-pages-account-projects-card\" hoverable>\n          <img slot=\"cover\" :src=\"item.cover\" :alt=\"item.title\" />\n          <a-card-meta :title=\"item.title\">\n            <template slot=\"description\">\n              <ellipsis :length=\"50\">{{ item.description }}</ellipsis>\n            </template>\n          </a-card-meta>\n          <div class=\"cardItemContent\">\n            <span>{{ item.updatedAt | fromNow }}</span>\n            <div class=\"avatarList\">\n              <avatar-list size=\"small\">\n                <avatar-list-item\n                  v-for=\"(member, i) in item.members\"\n                  :key=\"`${item.id}-avatar-${i}`\"\n                  :src=\"member.avatar\"\n                  :tips=\"member.name\"\n                />\n              </avatar-list>\n            </div>\n          </div>\n        </a-card>\n      </a-list-item>\n    </a-list>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport { TagSelect, StandardFormRow, Ellipsis, AvatarList } from '@/components'\nconst TagSelectOption = TagSelect.Option\nconst AvatarListItem = AvatarList.Item\n\nexport default {\n  name: 'Project',\n  components: {\n    AvatarList,\n    AvatarListItem,\n    Ellipsis,\n    TagSelect,\n    TagSelectOption,\n    StandardFormRow\n  },\n  data () {\n    return {\n      data: [],\n      form: this.$form.createForm(this),\n      loading: true\n    }\n  },\n  filters: {\n    fromNow (date) {\n      return moment(date).fromNow()\n    }\n  },\n  mounted () {\n    this.getList()\n  },\n  methods: {\n    handleChange (value) {\n      console.log(`selected ${value}`)\n    },\n    getList () {\n      this.$http.get('/list/article', { params: { count: 8 } }).then(res => {\n        console.log('res', res)\n        this.data = res.result\n        this.loading = false\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  .ant-pro-pages-account-projects-cardList {\n    margin-top: 24px;\n\n    :deep(.ant-card-meta-title) {\n      margin-bottom: 4px;\n    }\n\n    :deep(.ant-card-meta-description) {\n      height: 44px;\n      overflow: hidden;\n      line-height: 22px;\n    }\n\n    .cardItemContent {\n      display: flex;\n      height: 20px;\n      margin-top: 16px;\n      margin-bottom: -4px;\n      line-height: 20px;\n\n      > span {\n        flex: 1 1;\n        color: rgba(0,0,0,.45);\n        font-size: 12px;\n      }\n\n      :deep(.ant-pro-avatar-list) {\n        flex: 0 1 auto;\n      }\n    }\n  }\n</style>\n"],"mappings":"AA+BA,OAAAA,MAAA;AACA,SAAAC,SAAA,EAAAC,eAAA,EAAAC,QAAA,EAAAC,UAAA;AACA,IAAAC,eAAA,GAAAJ,SAAA,CAAAK,MAAA;AACA,IAAAC,cAAA,GAAAH,UAAA,CAAAI,IAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAN,UAAA,EAAAA,UAAA;IACAG,cAAA,EAAAA,cAAA;IACAJ,QAAA,EAAAA,QAAA;IACAF,SAAA,EAAAA,SAAA;IACAI,eAAA,EAAAA,eAAA;IACAH,eAAA,EAAAA;EACA;EACAS,IAAA,WAAAA,KAAA;IACA;MACAA,IAAA;MACAC,IAAA,OAAAC,KAAA,CAAAC,UAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,OAAA,WAAAA,QAAAC,IAAA;MACA,OAAAlB,MAAA,CAAAkB,IAAA,EAAAD,OAAA;IACA;EACA;EACAE,OAAA,WAAAA,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACAC,YAAA,WAAAA,aAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,aAAAC,MAAA,CAAAH,KAAA;IACA;IACAH,OAAA,WAAAA,QAAA;MAAA,IAAAO,KAAA;MACA,KAAAC,KAAA,CAAAC,GAAA;QAAAC,MAAA;UAAAC,KAAA;QAAA;MAAA,GAAAC,IAAA,WAAAC,GAAA;QACAT,OAAA,CAAAC,GAAA,QAAAQ,GAAA;QACAN,KAAA,CAAAhB,IAAA,GAAAsB,GAAA,CAAAC,MAAA;QACAP,KAAA,CAAAZ,OAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}